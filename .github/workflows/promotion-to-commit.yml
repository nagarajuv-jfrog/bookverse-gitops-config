name: 'Promotion to Commit'
on:
  repository_dispatch:
    types: [rlm_promotion]
jobs:
  update-gitops-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitOps Repo
        uses: actions/checkout@v3

      - name: Install jq and yq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ vars.JFROG_URL }}
          JF_USER: ${{ vars.JFROG_USER }}
          JF_ACCESS_TOKEN: ${{ secrets.JFROG_ACCESS_TOKEN }}
          JF_PROJECT: "bookverse"

      - name: Get Promoted Bundle Info
        id: get_info
        run: |
          echo "BUNDLE_NAME=${{ github.event.client_payload.name }}" >> $GITHUB_ENV
          echo "BUNDLE_VERSION=${{ github.event.client_payload.version }}" >> $GITHUB_ENV

      - name: Update Image Tags in values.yaml
        run: |
          # Get the platform bundle contents to find the source microservice bundles
          PLATFORM_BUNDLE_CONTENTS=$(jfrog rt rbs ${{ env.BUNDLE_NAME }} ${{ env.BUNDLE_VERSION }} --format=json)
          echo "Platform Bundle Contents: $PLATFORM_BUNDLE_CONTENTS"

          # Loop through each source microservice bundle within the platform bundle
          for service_bundle in $(echo "${PLATFORM_BUNDLE_CONTENTS}" | jq -r '.source_release_bundles[]'); do
            SERVICE_BUNDLE_NAME=$(echo "$service_bundle" | jq -r '.name')
            SERVICE_VERSION=$(echo "$service_bundle" | jq -r '.version')

            # This is a key fix: strip '-service' from the bundle name to match the key in values.yaml
            SERVICE_KEY=$(echo "$SERVICE_BUNDLE_NAME" | sed 's/-service//')

            echo "Processing microservice: $SERVICE_BUNDLE_NAME (key: $SERVICE_KEY) version $SERVICE_VERSION"

            # Get the contents of the microservice bundle to find the actual Docker images
            SERVICE_CONTENTS=$(jfrog rt rbs $SERVICE_BUNDLE_NAME $SERVICE_VERSION --format=json)
            echo "Service Contents: $SERVICE_CONTENTS"

            # Extract the frontend and backend image tags
            FRONTEND_IMAGE=$(echo "${SERVICE_CONTENTS}" | jq -r '.artifacts[] | select(.path | contains("frontend")) | .path')
            BACKEND_IMAGE=$(echo "${SERVICE_CONTENTS}" | jq -r '.artifacts[] | select(.path | contains("backend")) | .path')

            # The path includes the repo, so we need to add the registry URL
            REGISTRY_URL=$(echo "${{ vars.JFROG_URL }}" | sed 's|https://||')
            FULL_FRONTEND_IMAGE="$REGISTRY_URL/$FRONTEND_IMAGE"
            FULL_BACKEND_IMAGE="$REGISTRY_URL/$BACKEND_IMAGE"

            echo "Updating frontend image for $SERVICE_KEY to $FULL_FRONTEND_IMAGE"
            yq e -i ".services.$SERVICE_KEY.frontend.image = \"$FULL_FRONTEND_IMAGE\"" helm/bookverse/values.yaml

            echo "Updating backend image for $SERVICE_KEY to $FULL_BACKEND_IMAGE"
            yq e -i ".services.$SERVICE_KEY.backend.image = \"$FULL_BACKEND_IMAGE\"" helm/bookverse/values.yaml
          done

          echo "Final values.yaml content:"
          cat helm/bookverse/values.yaml

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add helm/bookverse/values.yaml
          git commit -m "Promoting ${{ env.BUNDLE_NAME }} ${{ env.BUNDLE_VERSION }} to production"
          git push
          