name: 'Promotion to Commit'
on:
  repository_dispatch:
    types: [rlm_promotion]
jobs:
  update-gitops-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitOps Repo
        uses: actions/checkout@v3

      - name: Install jq and yq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

      - name: Get Promoted Bundle Info from Webhook
        id: get_info
        run: |
          echo "BUNDLE_NAME=${{ github.event.client_payload.name }}" >> $GITHUB_ENV
          echo "BUNDLE_VERSION=${{ github.event.client_payload.version }}" >> $GITHUB_ENV

      - name: Update Image Tags in values.yaml
        run: |
          # Use a direct API call to get the platform bundle contents
          PLATFORM_BUNDLE_CONTENTS=$(curl -s -H "Authorization: Bearer ${{ secrets.JFROG_ACCESS_TOKEN }}" "${{ vars.JFROG_URL }}/lifecycle/api/v2/release_bundle/records/${{ env.BUNDLE_NAME }}/${{ env.BUNDLE_VERSION }}?project=bookverse")
          echo "Platform Bundle Contents: $PLATFORM_BUNDLE_CONTENTS"

          # Define the services we need to find images for
          SERVICES=("inventory" "recommendations" "checkout")
          REGISTRY_URL=$(echo "${{ vars.JFROG_URL }}" | sed 's|https://||')

          for SERVICE_KEY in "${SERVICES[@]}"; do
            SERVICE_BUNDLE_NAME="$SERVICE_KEY-service"
            echo "Processing service: $SERVICE_KEY"

            # Extract the frontend and backend image paths from the flat artifact list
            # We look for the manifest.json to get the correct image path and tag
            FRONTEND_IMAGE_PATH=$(echo "${PLATFORM_BUNDLE_CONTENTS}" | jq -r --arg name "$SERVICE_BUNDLE_NAME-frontend" '.source.artifacts[] | select(.package_name == $name and (.path | endswith("manifest.json"))) | .path')
            BACKEND_IMAGE_PATH=$(echo "${PLATFORM_BUNDLE_CONTENTS}" | jq -r --arg name "$SERVICE_BUNDLE_NAME-backend" '.source.artifacts[] | select(.package_name == $name and (.path | endswith("manifest.json"))) | .path')

            # The path from the API is like 'repo/image/tag/manifest.json'. We need to strip '/manifest.json'.
            FULL_FRONTEND_IMAGE="$REGISTRY_URL/$(echo $FRONTEND_IMAGE_PATH | sed 's|/manifest.json||')"
            FULL_BACKEND_IMAGE="$REGISTRY_URL/$(echo $BACKEND_IMAGE_PATH | sed 's|/manifest.json||')"

            echo "Updating frontend image for $SERVICE_KEY to $FULL_FRONTEND_IMAGE"
            yq e -i ".services.$SERVICE_KEY.frontend.image = \"$FULL_FRONTEND_IMAGE\"" helm/bookverse/values.yaml

            echo "Updating backend image for $SERVICE_KEY to $FULL_BACKEND_IMAGE"
            yq e -i ".services.$SERVICE_KEY.backend.image = \"$FULL_BACKEND_IMAGE\"" helm/bookverse/values.yaml
          done

          echo "Final values.yaml content:"
          cat helm/bookverse/values.yaml

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add helm/bookverse/values.yaml
          git commit -m "Promoting ${{ env.BUNDLE_NAME }} ${{ env.BUNDLE_VERSION }} to production"
          git push
